<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~  Copyright 1999-2019 Seata.io Group.
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/seata"/>
        <property name="password" value="123456"/>
        <property name="username" value="root"/>
    </bean>

    <bean id="stateMachineEngine" class="io.seata.saga.engine.impl.ProcessCtrlStateMachineEngine">
        <property name="stateMachineConfig" ref="dbStateMachineConfig"/>
    </bean>
    <bean id="dbStateMachineConfig" class="io.seata.saga.engine.config.DbStateMachineConfig">
        <property name="dataSource" ref="dataSource"/>
        <property name="resources" value="saga/statelang/*.json"/>
        <property name="enableAsync" value="true"/>
        <property name="threadPoolExecutor" ref="threadExecutor"/>
        <property name="applicationId" value="sagatest"/>
        <property name="txServiceGroup" value="default_tx_group"/>
        <property name="sagaBranchRegisterEnable" value="false"/>
        <property name="sagaJsonParser" value="jackson"/>
        <property name="sagaRetryPersistModeUpdate" value="false"/>
        <property name="sagaCompensatePersistModeUpdate" value="false"/>
        <property name="sagaTransactionalTemplate" ref="mockSagaTransactionTemplate"/>
    </bean>

    <bean id="mockSagaTransactionTemplate" class="com.alibaba.seatasagatest.mock.MockSagaTransactionTemplate"/>

    <bean id="threadExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean">
        <property name="threadNamePrefix" value="SAGA_ASYNC_EXE_"/>
        <property name="corePoolSize" value="20"/>
        <property name="maxPoolSize" value="20"/>
        <property name="queueCapacity" value="100"/>
        <property name="rejectedExecutionHandler" ref="callerRunsPolicy"/>
    </bean>

    <bean name="callerRunsPolicy" class="java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy">
    </bean>

    <bean class="io.seata.saga.rm.StateMachineEngineHolder">
        <property name="stateMachineEngine" ref="stateMachineEngine"/>
    </bean>


    <bean id="aService" class="com.alibaba.seatasagatest.service.AService"/>
    <bean id="bService" class="com.alibaba.seatasagatest.service.BService"/>
</beans>